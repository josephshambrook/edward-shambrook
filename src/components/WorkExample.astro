---
type Color =
  | "navy"
  | "blue"
  | "aqua"
  | "teal"
  | "olive"
  | "green"
  | "lime"
  | "yellow"
  | "orange"
  | "red"
  | "fuchsia"
  | "purple"
  | "maroon"
  | "white"
  | "silver"
  | "gray"
  | "black";

type Props = {
  alignImage?: "left" | "right";
  headingColor: Color;
  headingColorDark?: Color;
  title: string;
};

const {
  alignImage = "left",
  headingColor,
  headingColorDark,
  title,
} = Astro.props;
---

<article class={alignImage === "right" ? "reverse" : ""}>
  <div class="content">
    <h3
      slot="title"
      style={`--color: ${headingColor}; --color-dark: ${headingColorDark}`}
    >
      {title}
    </h3>
  </div>

  {
    Astro.slots.has("media") && (
      <div class="media">
        <slot name="media" />
      </div>
    )
  }
  <div class="media">
    <slot />
  </div>
  <slot name="description" />
</article>

<style>
  article {
    /* align-items: center; */
    /* display: flex; */
    /* flex-direction: column; */
    /* padding-block: 2rem; */
  }

  h3 {
    background: linear-gradient(var(--text-color), var(--color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  @media screen and (prefers-color-scheme: dark) {
    h3 {
      background: linear-gradient(var(--text-color), var(--color-dark));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  }

  .content {
    flex: 1 0 100%;
    max-width: var(--max-width);
  }

  @media screen and (min-width: 550px) {
    :global(.media > *) {
      /* display: flex;
      flex-wrap: wrap; */
      /* gap: 1rem; */
      /* flex: 0 1 auto; */
      display: grid;
      gap: 1rem;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    :global(.media > * > *) {
      /* flex: 1 1 auto; */
    }
  }
</style>
